// Generated by LiveScript 1.5.0
(function(){
  var ref$, TextOps, ListOps, wrap, Filter;
  ref$ = require('./ops'), TextOps = ref$.TextOps, ListOps = ref$.ListOps;
  wrap = function(raw, args){
    var ref$, pre, post;
    ref$ = args.length === 1 ? [args[0], args[0]] : args, pre = ref$[0], post = ref$[1];
    raw.prepend = pre + "" + raw + ".prepend";
    return raw.append += post + "";
  };
  module.exports = Filter = (function(){
    Filter.displayName = 'Filter';
    var prototype = Filter.prototype, constructor = Filter;
    importAll$(prototype, arguments[0]);
    importAll$(prototype, arguments[1]);
    function Filter(arg$){
      this.name = arg$.name, this.args = arg$.args, this.raw = arg$.raw, this.results = arg$.results, this.textOperations = arg$.textOperations;
      this.head = this.first.bind(this);
    }
    join(function(){
      return this.join = this.args.length ? this.args[0] + "" : '';
    });
    before(function(){
      return this.raw.prepend = this.args[0] + "" + raw + ".prepend";
    });
    after(function(){
      return this.raw.append += this.args[0] + "";
    });
    wrap(function(){
      return wrap(raw, args);
    });
    [join, raw, results, textOperations];
    return Filter;
  }(TextOperations, ListOps));
  function importAll$(obj, src){
    for (var key in src) obj[key] = src[key];
    return obj;
  }
}).call(this);
