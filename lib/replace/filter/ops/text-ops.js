// Generated by LiveScript 1.5.0
(function(){
  module.exports = [
    replace(function(){
      return (function(args){
        var this$ = this;
        return this.textOperations.push(function(it){
          return it.replace(args[0], args[1]);
        });
      }.call(this, args));
    }), lowercase(function(){
      var this$ = this;
      return this.textOperations.push(function(it){
        return it.toLowerCase();
      });
    }), uppercase(function(){
      var this$ = this;
      return this.textOperations.push(function(it){
        return it.toUpperCase();
      });
    }), capitalize(function(){
      return this.textOperations.push(capitalize);
    }), uncapitalize(function(){
      return this.textOperations.push(function(it){
        return it.charAt(0).toLowerCase() + it.slice(1);
      });
    }), camelize(function(){
      return this.textOperations.push(camelize);
    }), dasherize(function(){
      return this.textOperations.push(dasherize);
    }), trim(function(){
      var this$ = this;
      return this.textOperations.push(function(it){
        return it.trim();
      });
    }), substring(function(){
      return (function(args){
        var this$ = this;
        return this.textOperations.push(function(it){
          return it.substring(args[0], args[1]);
        });
      }.call(this, args));
    }), substr(function(){
      return (function(args){
        var this$ = this;
        return this.textOperations.push(function(it){
          return it.substr(args[0], args[1]);
        });
      }.call(this, args));
    }), strSlice(function(){
      return (function(args){
        var this$ = this;
        return this.textOperations.push(function(it){
          return it.slice(args[0], args[1]);
        });
      }.call(this, args));
    })
  ];
}).call(this);
