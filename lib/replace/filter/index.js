// Generated by LiveScript 1.5.0
(function(){
  var ref$, lines, unlines, filter, fold, capitalize, camelize, dasherize, Filter, validate;
  ref$ = require('prelude-ls'), lines = ref$.lines, unlines = ref$.unlines, filter = ref$.filter, fold = ref$.fold, capitalize = ref$.capitalize, camelize = ref$.camelize, dasherize = ref$.dasherize;
  Filter = require('./clazz');
  validate = require('./validate');
  filter = function(name, args, arg$){
    var raw, results, textOperations, actions, opFilter, operation, node, parts, action, opMethod, e, argsStr;
    raw = arg$.raw, results = arg$.results, textOperations = arg$.textOperations, actions = arg$.actions;
    validate(name, args);
    opFilter = new Filter({
      name: name,
      args: args,
      raw: raw,
      results: results,
      textOperations: textOperations,
      actions: actions
    });
    try {
      operation = name;
      node = null;
      if (/:/.test(name)) {
        parts = name.split(':');
        operation = parts[0];
        action = name;
        node = actions[action];
      }
      opMethod = opFilter[operation];
      return opMethod(node);
    } catch (e$) {
      e = e$;
      argsStr = args ? args : '';
      throw new Error("Invalid filter: " + name + argsStr);
    }
  };
}).call(this);
